[{"/Users/karencortez/projeto-pokeapp/pokeapp/src/index.js":"1","/Users/karencortez/projeto-pokeapp/pokeapp/src/App.js":"2","/Users/karencortez/projeto-pokeapp/pokeapp/src/routes.js":"3","/Users/karencortez/projeto-pokeapp/pokeapp/src/pages/Home.js":"4","/Users/karencortez/projeto-pokeapp/pokeapp/src/pages/MeusPokemons.js":"5","/Users/karencortez/projeto-pokeapp/pokeapp/src/components/pokemon/Pokemon.js":"6","/Users/karencortez/projeto-pokeapp/pokeapp/src/components/footer/Footer.js":"7","/Users/karencortez/projeto-pokeapp/pokeapp/src/components/Loading/Loading.js":"8","/Users/karencortez/projeto-pokeapp/pokeapp/src/components/header/Header.js":"9"},{"size":332,"mtime":1611356139154,"results":"10","hashOfConfig":"11"},{"size":124,"mtime":1611356139134,"results":"12","hashOfConfig":"11"},{"size":425,"mtime":1611356139158,"results":"13","hashOfConfig":"11"},{"size":3657,"mtime":1611362304454,"results":"14","hashOfConfig":"11"},{"size":3757,"mtime":1611362274773,"results":"15","hashOfConfig":"11"},{"size":7404,"mtime":1611356139152,"results":"16","hashOfConfig":"11"},{"size":326,"mtime":1611356139334,"results":"17","hashOfConfig":"11"},{"size":350,"mtime":1611356139335,"results":"18","hashOfConfig":"11"},{"size":737,"mtime":1611356404601,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1l33q8c",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/karencortez/projeto-pokeapp/pokeapp/src/index.js",[],["41","42"],"/Users/karencortez/projeto-pokeapp/pokeapp/src/App.js",[],"/Users/karencortez/projeto-pokeapp/pokeapp/src/routes.js",[],"/Users/karencortez/projeto-pokeapp/pokeapp/src/pages/Home.js",["43","44","45"],"/Users/karencortez/projeto-pokeapp/pokeapp/src/pages/MeusPokemons.js",["46"],"/Users/karencortez/projeto-pokeapp/pokeapp/src/components/pokemon/Pokemon.js",["47"],"import React, { useEffect, useState } from 'react';\nimport LoadingScreen from '../Loading/Loading';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst Type = ({ types }) => {\n  return <div className=\"PokemonType\">{types.toUpperCase()}</div>;\n};\n\n\nfunction getTypeStatus(value) {\n  switch(value) {\n    case true:\n      return 'Soltar';\n    case false:\n      return 'Indisponível';\n    default:\n      return 'Capturar';\n  }\n}\n\nfunction verifyStorage(){\n  if (localStorage.getItem('meusPokemons') === null) {\n    localStorage.setItem('meusPokemons', JSON.stringify([]));\n  } \n}\n\nfunction getMyPokemonsList(){\n  verifyStorage();\n\n  //capturando dados no storage\n  let pokemonsCaptured = JSON.parse(localStorage.getItem('meusPokemons'));\n\n  return pokemonsCaptured;\n}\n\nfunction setMyPokemonsList( verifyStorage ){\n\n  localStorage.setItem(\n    'meusPokemons',\n    JSON.stringify(verifyStorage)\n  );\n}\n\nconst Pokemon = ({ name, url }) => {\n  const [ types, setTypes ] = useState([]);\n  const [ id, setId ] = useState(1);\n  const [ loading, setLoading ] = useState(true);\n  const [ pokemonStatus, setPokemonStatus ] = useState('Carregando');\n\n  useEffect(() => {\n    getAttributeList();\n    setTimeout(() => setLoading(false), 1)\n  }, []);\n\n  const getAttributeList = async () => {\n    getPokemonStatus();\n    const response = await fetch(url);\n    const data = await response.json();\n    setId(data.id);\n    setTypes(data.types);\n  };\n\n  \n  function getPokemonStatus() {\n    setPokemonStatus('Carregando');\n\n    //capturando dados no storage\n    let myPokemons = getMyPokemonsList();\n    \n    //verificando se já existe pokemon cadastrado com esse nome\n    let pokemonId = myPokemons.findIndex(item => item.name === name);\n\n    let pokemonTextStatus = (pokemonId < 0) ? \n      //pokemon não capturado\n      getTypeStatus(''):\n      //pokemon já capturado\n      getTypeStatus(myPokemons[pokemonId].status);\n\n      setPokemonStatus(pokemonTextStatus);\n  }\n\n  // capturar e soltar pokemon\n  // o pokemon só pode ser captura e solto uma vez\n  function handleButtonClick(event) {\n    //capturando dados no storage\n    let pokemonsCaptured = getMyPokemonsList();\n\n    //verificando se já existe pokemon cadastrado com esse nome\n    let pokemonId = pokemonsCaptured.findIndex(item => item.name === name);\n\n    //validando o pokemon já foi capturado\n    if(pokemonId < 0){\n      //Pokemon não foi capturado\n      setPokemonStatus('Soltar');\n      \n      let meusPokemonsURL = {\n          name,\n          url,\n          status: true,\n      };\n\n      setMyPokemonsList([\n        ...pokemonsCaptured,\n        meusPokemonsURL,\n      ]);\n\n    } else {\n      //Pokemon já catpurado\n      //Soltando Pokemon\n      pokemonsCaptured[pokemonId].status = false;\n      setMyPokemonsList(pokemonsCaptured);\n    }\n\n    getPokemonStatus();\n  }\n  return (\n    <>\n    {loading === false ? (\n      <Card \n        bg='dark'\n        key={id}\n        text='light'\n        style={{ width: '18rem' }}\n        className=\"mb-2\"\n      >\n        <Card.Header className=\"pokemonName\">\n          {name.toUpperCase()}\n        </Card.Header>\n        <Card.Img\n          variant=\"top\" \n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`}\n          alt={\"Imagem do Pokemon \" + name }\n        />\n        <Card.Body>\n  \n          <Card.Title>\n          <small className=\"text-muted\">#{id}</small>\n            \n          </Card.Title>\n  \n          <Card.Text>\n            {types.map((item) => (\n              <Type key={item.type.name} types={item.type.name} />\n            ))}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer className=\"cardFooterAlign\">\n          {(pokemonStatus==='Soltar' || pokemonStatus==='Capturar') && (\n              <Button \n              variant={\n                {\n                'Capturar': 'primary',\n                'Soltar': 'warning',\n                'Indisponível': 'light'\n                }[pokemonStatus]\n              }\n              id={id} \n              onClick={handleButtonClick} \n              className=\"btn-action\"\n            >\n              { pokemonStatus.toUpperCase() } \n            </Button>\n          )}\n          {pokemonStatus==='Indisponível' && (\n            <div>\n              <Alert key=\"dark\" severity=\"info\">\n                Pokemon já capturado.\n              </Alert>\n            </div>\n          )}\n        </Card.Footer>\n      </Card>\n    ):(\n      <LoadingScreen/>\n    )}\n       \n  </>\n)\n  \n}\n\nexport default Pokemon;\n\n/*\n<>\n  {loading === false ? (\n    <Card style={{ width: '18rem' }}>\n      <Card.Img \n        variant=\"top\" \n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`}\n        alt={\"Imagem do Pokemon \" + name }\n      />\n      <Card.Body>\n\n        <Card.Title>\n          <strong>{name}</strong>\n          #{id}\n        </Card.Title>\n\n        <Card.Text>\n          {types.map((item) => (\n            <Type key={item.type.name} types={item.type.name} />\n          ))}\n        </Card.Text>\n\n        {(pokemonStatus==='Soltar' || pokemonStatus==='Capturar') && (\n            <Button \n            variant={\n              {\n              'Capturar': 'primary',\n              'Soltar': 'dark',\n              'Indisponível': 'light'\n              }[pokemonStatus]\n            }\n            id={id} \n            onClick={handleButtonClick} \n            className=\"btn-action\"\n          >\n            { pokemonStatus } \n          </Button>\n        )}\n        {pokemonStatus==='Indisponível' && (\n          <div className=\"teste\">\n            <Alert key=\"light\" severity=\"info\" variant=\"outlined\">\n              Pokemon já capturado.\n            </Alert>\n          </div>\n        )}\n\n      </Card.Body>\n    </Card>\n  ):(\n    <LoadingScreen/>\n  )}\n     \n</>\n\n*/\n\n\n/*\nreturn (\n    <>\n    {loading === false ? (\n        <div className=\"PokemonItem\" key={id}>\n        <h1>\n          #{id} - {name}\n        </h1>\n        <img\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`}\n          alt=\"Imagem Pokemon\"\n          width=\"130\"\n        />\n        {types.map((item) => (\n          <Type key={item.type.name} types={item.type.name} />\n        ))}\n\n        {(pokemonStatus==='Soltar' || pokemonStatus==='Capturar') && (\n            <Button \n            variant={\n              {\n              'Capturar': 'primary',\n              'Soltar': 'dark',\n              'Indisponível': 'light'\n              }[pokemonStatus]\n            }\n            id={id} \n            onClick={handleButtonClick} \n            className=\"btn-action\"\n          >\n            { pokemonStatus } \n          </Button>\n        )}\n        {pokemonStatus==='Indisponível' && (\n          <div className=\"teste\">\n            <Alert key=\"light\" severity=\"info\" variant=\"outlined\">\n              Pokemon já capturado.\n            </Alert>\n          </div>\n        )}\n\n        \n\n        \n      </div>\n    ):(\n      <LoadingScreen/>\n    )}\n  </>\n)\n\n\n\n\n\n///////////\n\n\n\n  <ListGroup className=\"list-group-flush\">\n    <ListGroupItem>Cras justo odio</ListGroupItem>\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\n  </ListGroup>\n\n*/","/Users/karencortez/projeto-pokeapp/pokeapp/src/components/footer/Footer.js",[],"/Users/karencortez/projeto-pokeapp/pokeapp/src/components/Loading/Loading.js",["48"],"import React from 'react'\n\nconst LoadingScreen = () => {\n  return (\n    <>\n      <div className='loading-gif' align=\"center\">\n        <img\n          className='gif'\n          src='https://cdn.dribbble.com/users/946764/screenshots/2844436/pokeball.gif'\n          alt='Loading Image'\n        />\n      </div>\n    </>\n  )\n}\n\nexport default LoadingScreen;","/Users/karencortez/projeto-pokeapp/pokeapp/src/components/header/Header.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":36,"column":6,"nodeType":"55","endLine":36,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":73,"column":6,"nodeType":"55","endLine":73,"endColumn":17,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":81,"column":11,"nodeType":"61","endLine":85,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":96,"column":11,"nodeType":"61","endLine":100,"endColumn":13},{"ruleId":"53","severity":1,"message":"62","line":56,"column":6,"nodeType":"55","endLine":56,"endColumn":8,"suggestions":"63"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":9,"nodeType":"61","endLine":11,"endColumn":11},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPokemonsList'. Either include it or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has a missing dependency: 'allPokemons'. Either include it or remove the dependency array.",["67"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getAttributeList'. Either include it or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [getPokemonsList]",{"range":"75","text":"76"},"Update the dependencies array to be: [allPokemons, pesquisar]",{"range":"77","text":"78"},"Update the dependencies array to be: [getAttributeList]",{"range":"79","text":"80"},[1281,1283],"[getPokemonsList]",[2305,2316],"[allPokemons, pesquisar]",[1314,1316],"[getAttributeList]"]